
-#@cols = [:id, :pins, :pauthors, :ptitle].map{ |v| _(v) }
-@cols = [:id, :pauthors, :ptitle].map{ |v| _(v) }

-@dnames = {0 => :d_uncertain, 1 => :d_rejected, 2 => :d_sectional, 3 => :d_poster, 4 => :d_plenary, 5 => :d_invited}

-@cntmax = 0
-#@report_data['papers'].each_pair do |k,r|
-@report_data['papers'].each do |r|
 - k = r['paper_cnt']
 -@cntmax = r['reviews_data'].count if @cntmax < r['reviews_data'].count
-@cntmax.times do
 -@cols << [ _(:reviewer), '- '+_(:score), '- '+_(:decision) ].join( ?\n )
- @ss.<< @cols, :format => {:weight => :bold}

-#@report_data['papers'].each_pair do |k,r|
-@report_data['papers'].each do |r|
 - k = r['paper_cnt']
 -@ss << k.to_s.dup.force_encoding('UTF-8')
 -#@ss << r['authors_data'].map { |a| a['user_id'] }.join( ?\n )
 -#@ss << r['authors_data'].map { |a| a['user_name'] +', '+ a['country'] }.join( ?\n )
 -#@ss << r['authors_data'].map { |a| a['user_name'] +', '+ (call '/comp/user/country_name', :locals => {:code => a['country'].dup}) }.join(?\n)
 -#@ss << r['authors_data'].map { |a| a['user_name'] +', '+ a['affiliation'] +', '+ a['city'] +', '+ (call '/comp/user/country_name', :locals => {:code => a['country'].dup}).strip }.join(?\n)
 -@ss << r['authors_data'].map { |a| (a['user_name'].to_s) +', '+ (a['affiliation'].to_s) +', '+ (a['city'].to_s) +', '+ (call '/comp/user/country_name', :locals => {:code => a['country'].dup}).strip }.join(?\n)
 -@ss << r['title']
 -r['reviews_data'].each do |a|
  -#@ss << a['user_name'] + ?\n + a['score'] + ?\n + _( @dnames[ a['decision_id'].to_i ] )
  -#@ss << a.inspect.to_s
  -@ss << a['reviewer']['user_name'].to_s + ?\n + _('score_'+a['data']['score'].to_s) + ?\n + _('decision_'+a['data']['decision'].to_s)
 - @ss << []

-@_tj_next_template = ''

